// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id          Int       @id @default(autoincrement())
  teamName    String
  captainName String
  email       String
  projectID   project   @relation(fields: [projectId], references: [id])
  status      String    @default("Pending")
  projectId   Int
  members     members[]
  stall       stall     @relation(fields: [stallId], references: [id])
  bill        bill[]
  coupon      coupon[]
  stallId     Int
  stream      stream    @relation(fields: [streamId], references: [id])
  streamId    Int
  teamPDF     String? //stores pdf
}

model stream {
  id     Int    @id @default(autoincrement())
  level  String //bachelors or +2
  option String //csit or bca or bit or science or management or humaities
  value  Int //semester or class(11/12)
  Team   Team[]
}

model stall {
  id      Int     @id @default(autoincrement())
  stallId Int
  isFree  Boolean @default(true)
  Team    Team[]
}

model admin {
  id       Int    @id @default(autoincrement())
  userName String
  password String
}

model project {
  id           Int     @id @default(autoincrement())
  title        String
  description  String
  Team         Team[]
  projectPhoto String?
}

model members {
  id           Int     @id @default(autoincrement())
  name         String
  team_id      Team    @relation(fields: [teamId], references: [id])
  teamId       Int
  memberphoto  String?
  pdfPath String?
}

model attendance {
  id        Int      @id @default(autoincrement())
  date      DateTime
  membersId Int
 
}

model coupon {
  id       Int     @id @default(autoincrement())
  otp      String  @default("") //autogenerated
  team_Id  Team    @relation(fields: [teamId], references: [id])
  is_valid Boolean @default(true)
  quantity Int     @default(1)
  teamId   Int
}

model bill {
  id         Int  @id @default(autoincrement())
  team_Id    Team @relation(fields: [teamId], references: [id])
  tokenValue Int  @default(50)
  teamId     Int
}
